@page "/dealers/delete"
@using Microsoft.EntityFrameworkCore
@using DealersApplication.Models
@inject IDbContextFactory<DealersApplication.Data.DealersAppDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
    }

    .card {
        background: #fff;
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 2rem;
    }

    .text-primary {
        color: #007bff;
    }

    .text-danger {
        color: #dc3545;
    }

    .btn {
        font-weight: bold;
        padding: 10px 20px;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    dl dt {
        font-weight: bold;
    }

    dl dd {
        margin-bottom: 1rem;
    }

    .colorful-form-container {
        background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
    }

    .d-flex {
        gap: 1rem;
    }
</style>

<div class="container py-5">

    <div class="card colorful-form-container">
        @if (dealer is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="card-body">
                <h2 class="text-danger mb-4">Are you sure you want to delete this dealer?</h2>
                <dl class="row">
                    <dt class="col-sm-3">Name:</dt>
                    <dd class="col-sm-9">@dealer.Name</dd>
                    <dt class="col-sm-3">Address:</dt>
                    <dd class="col-sm-9">@dealer.Address</dd>
                    <dt class="col-sm-3">City:</dt>
                    <dd class="col-sm-9">@dealer.City</dd>
                    <dt class="col-sm-3">State:</dt>
                    <dd class="col-sm-9">@dealer.State</dd>
                    <dt class="col-sm-3">ZipCode:</dt>
                    <dd class="col-sm-9">@dealer.ZipCode</dd>
                    <dt class="col-sm-3">PhoneNumber:</dt>
                    <dd class="col-sm-9">@dealer.PhoneNumber</dd>
                    <dt class="col-sm-3">Email:</dt>
                    <dd class="col-sm-9">@dealer.Email</dd>
                    <dt class="col-sm-3">Website:</dt>
                    <dd class="col-sm-9">@dealer.Website</dd>
                    <dt class="col-sm-3">EstablishedDate:</dt>
                    <dd class="col-sm-9">@dealer.EstablishedDate</dd>
                </dl>

                <div class="d-flex justify-content-between">
                    <EditForm method="post" Model="dealer" OnValidSubmit="DeleteDealer" FormName="delete" Enhance>
                        <button type="submit" class="btn btn-danger w-100 shadow-sm" disabled="@(dealer is null)">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    </EditForm>
                    <a href="/dealers" class="btn btn-secondary w-100 shadow-sm">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private Dealer? dealer;

    [SupplyParameterFromQuery]
    private int DealerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dealer = await context.Dealer.FirstOrDefaultAsync(m => m.DealerId == DealerId);

        if (dealer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteDealer()
    {
        using var context = DbFactory.CreateDbContext();
        context.Dealer.Remove(dealer!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/dealers");
    }
}
