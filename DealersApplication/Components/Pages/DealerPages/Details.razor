@page "/dealers/details"
@using Microsoft.EntityFrameworkCore
@using DealersApplication.Models
@inject IDbContextFactory<DealersApplication.Data.DealersAppDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
    }

    .card {
        background: #fff;
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 2rem;
    }

    .text-primary {
        color: #007bff;
    }

    .btn {
        font-weight: bold;
        padding: 10px 20px;
    }

    .btn-warning {
        background-color: #f39c12;
        color: white;
    }

        .btn-warning:hover {
            background-color: #e67e22;
        }

    .btn-secondary {
        background-color: #95a5a6;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #7f8c8d;
        }

    dl dt {
        font-weight: bold;
    }

    dl dd {
        margin-bottom: 1rem;
    }

    .colorful-form-container {
        background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
    }
</style>

<div class="container py-5">
    <div class="card colorful-form-container">
        @if (dealer is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="card-body">
                <h2 class="text-primary mb-4">Dealer Information</h2>
                <dl class="row">
                    <dt class="col-sm-3">Name:</dt>
                    <dd class="col-sm-9">@dealer.Name</dd>
                    <dt class="col-sm-3">Address:</dt>
                    <dd class="col-sm-9">@dealer.Address</dd>
                    <dt class="col-sm-3">City:</dt>
                    <dd class="col-sm-9">@dealer.City</dd>
                    <dt class="col-sm-3">State:</dt>
                    <dd class="col-sm-9">@dealer.State</dd>
                    <dt class="col-sm-3">ZipCode:</dt>
                    <dd class="col-sm-9">@dealer.ZipCode</dd>
                    <dt class="col-sm-3">PhoneNumber:</dt>
                    <dd class="col-sm-9">@dealer.PhoneNumber</dd>
                    <dt class="col-sm-3">Email:</dt>
                    <dd class="col-sm-9">@dealer.Email</dd>
                    <dt class="col-sm-3">Website:</dt>
                    <dd class="col-sm-9">@dealer.Website</dd>
                    <dt class="col-sm-3">EstablishedDate:</dt>
                    <dd class="col-sm-9">@dealer.EstablishedDate</dd>
                </dl>
                <div class="d-flex justify-content-between">
                    <a href="@($"/dealers/edit?dealerid={dealer.DealerId}")" class="btn btn-warning">Edit</a>
                    <a href="@($"/dealers")" class="btn btn-secondary">Back to List</a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private Dealer? dealer;

    [SupplyParameterFromQuery]
    private int DealerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dealer = await context.Dealer.FirstOrDefaultAsync(m => m.DealerId == DealerId);

        if (dealer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
